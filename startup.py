#!/usr/bin/env python3
"""
üöÄ SOLAR NASIH - Script de D√©marrage pour Render
Ce script d√©marre le serveur principal qui √©coute sur le port de Render
"""

import os
import sys
import subprocess
import threading
import time

# Ajouter le r√©pertoire de d√©ploiement au path
sys.path.append('SolarNasih_Deploiement_Complet')

def start_background_services():
    """D√©marre les services SMA, RAG et Frontend en arri√®re-plan"""
    print("üöÄ D√©marrage des services en arri√®re-plan...")
    
    # D√©marrer SMA
    def start_sma():
        os.chdir('SolarNasih_SMA')
        subprocess.Popen([sys.executable, "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"])
        os.chdir('..')
    
    # D√©marrer RAG
    def start_rag():
        os.chdir('SolarNasih_RAG')
        subprocess.Popen([sys.executable, "-m", "uvicorn", "api_simple:app", "--host", "0.0.0.0", "--port", "8001"])
        os.chdir('..')
    
    # D√©marrer Frontend
    def start_frontend():
        try:
            os.chdir('SolarNasih_Template')
            if not os.path.exists('node_modules'):
                subprocess.run(['npm', 'install'], check=True)
            subprocess.Popen(['npm', 'run', 'preview', '--', '--host', '0.0.0.0', '--port', '3000'])
            os.chdir('..')
        except Exception as e:
            print(f"‚ö†Ô∏è Erreur lors du d√©marrage du frontend: {e}")
            print("üöÄ Le serveur principal continuera sans le frontend")
            os.chdir('..')
    
    # D√©marrer les services en parall√®le
    threading.Thread(target=start_sma, daemon=True).start()
    time.sleep(2)
    threading.Thread(target=start_rag, daemon=True).start()
    time.sleep(2)
    threading.Thread(target=start_frontend, daemon=True).start()

if __name__ == "__main__":
    # D√©marrer les services en arri√®re-plan
    start_background_services()
    
    # Attendre un peu que les services d√©marrent
    time.sleep(5)
    
    # Importer et d√©marrer le serveur principal
    from render_main import app
    import uvicorn
    
    port = int(os.getenv('PORT', '10000'))
    print(f"üéâ D√©marrage du serveur principal sur le port {port}")
    
    uvicorn.run(app, host="0.0.0.0", port=port)
