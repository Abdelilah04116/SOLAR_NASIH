#!/usr/bin/env python3
"""
Script de d√©marrage complet pour RAG
Lance l'API FastAPI et l'interface Streamlit
"""
import os
import subprocess
import sys
import time
import signal
from pathlib import Path

def start_api():
    """D√©marre l'API FastAPI compl√®te"""
    print("üöÄ D√©marrage de l'API RAG compl√®te...")
    
    # Configuration du PYTHONPATH pour les imports
    os.environ["PYTHONPATH"] = str(Path.cwd())
    
    api_cmd = [
        sys.executable, "-m", "uvicorn", 
        "src.api.main:app", 
        "--host", "0.0.0.0", 
        "--port", os.getenv("PORT", "8000"),
        "--reload", "False"
    ]
    return subprocess.Popen(api_cmd)

def start_frontend():
    """D√©marre l'interface Streamlit"""
    print("üåê D√©marrage de l'interface RAG...")
    
    # Configuration Streamlit pour Render
    streamlit_port = "8501"
    frontend_cmd = [
        sys.executable, "-m", "streamlit", "run", 
        "frontend_simple.py",
        "--server.port", streamlit_port,
        "--server.address", "0.0.0.0",
        "--server.headless", "true",
        "--server.enableCORS", "false",
        "--server.enableXsrfProtection", "false"
    ]
    
    # Mettre √† jour l'URL de l'API dans l'interface
    update_api_url()
    
    return subprocess.Popen(frontend_cmd)

def update_api_url():
    """Met √† jour l'URL de l'API dans l'interface"""
    frontend_file = Path("frontend_simple.py")
    if frontend_file.exists():
        content = frontend_file.read_text()
        # Remplacer localhost par l'URL courante
        render_url = os.getenv("RENDER_EXTERNAL_URL", "http://localhost:8000")
        api_url = render_url.replace("https://", "http://") if render_url.startswith("https://") else render_url
        
        # Mettre √† jour l'URL dans le fichier
        content = content.replace(
            'API_BASE_URL = "http://localhost:8000"',
            f'API_BASE_URL = "{api_url}"'
        )
        frontend_file.write_text(content)
        print(f"‚úÖ API URL mise √† jour: {api_url}")

def main():
    """Fonction principale"""
    print("üîç Solar Nasih RAG - D√©marrage complet")
    print("=" * 50)
    
    # Variables d'environnement
    os.environ.setdefault("PYTHONPATH", "/opt/render/project/src")
    
    processes = []
    
    try:
        # D√©marrer l'API
        api_process = start_api()
        processes.append(api_process)
        
        # Attendre que l'API d√©marre
        time.sleep(5)
        
        # D√©marrer l'interface
        frontend_process = start_frontend()
        processes.append(frontend_process)
        
        print("‚úÖ Services d√©marr√©s:")
        print(f"   üì° API: http://0.0.0.0:{os.getenv('PORT', '8000')}")
        print(f"   üåê Interface: http://0.0.0.0:8501")
        print("   üìö Documentation: /docs")
        
        # Attendre les processus
        for process in processes:
            process.wait()
            
    except KeyboardInterrupt:
        print("\nüõë Arr√™t des services...")
        for process in processes:
            process.terminate()
        sys.exit(0)
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        for process in processes:
            process.terminate()
        sys.exit(1)

if __name__ == "__main__":
    main()
