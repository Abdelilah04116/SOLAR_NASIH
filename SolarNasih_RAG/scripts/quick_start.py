"""
Script de d√©marrage rapide - v√©rifie tout et lance l'application
"""

import sys
import os
import subprocess
from pathlib import Path

def check_requirements():
    """V√©rifie les pr√©requis"""
    print("üîç V√©rification des pr√©requis...")
    
    # V√©rifier Python
    if sys.version_info < (3, 8):
        print("‚ùå Python 3.8+ requis")
        return False
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor}")
    
    # V√©rifier l'environnement virtuel
    if not (Path("venv").exists() or Path(".venv").exists()):
        print("‚ùå Environnement virtuel non trouv√©")
        print("Ex√©cutez: python -m venv venv")
        return False
    print("‚úÖ Environnement virtuel trouv√©")
    
    # V√©rifier .env
    if not Path(".env").exists():
        print("‚ö†Ô∏è Fichier .env non trouv√©, copie depuis .env.example")
        if Path(".env.example").exists():
            import shutil
            shutil.copy(".env.example", ".env")
            print("üìù Veuillez √©diter .env avec vos cl√©s API")
        else:
            print("‚ùå .env.example non trouv√©")
            return False
    print("‚úÖ Fichier .env trouv√©")
    
    return True

def main():
    """Point d'entr√©e principal"""
    print("üöÄ RAG Multimodal - D√©marrage rapide")
    print("=" * 40)
    
    if not check_requirements():
        print("\n‚ùå Pr√©requis non satisfaits")
        return 1
    
    print("\nüéØ Lancement de l'application...")
    
    # Lancer le script principal
    try:
        subprocess.run([sys.executable, "start.py"], check=True)
    except KeyboardInterrupt:
        print("\nüõë Arr√™t demand√© par l'utilisateur")
    except subprocess.CalledProcessError as e:
        print(f"\n‚ùå Erreur lors du lancement: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main())